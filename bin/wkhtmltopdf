#!/usr/bin/env ruby

###
# wkhtmltopdf_binary_gem Copyright 2013 The University of Iowa
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy
# of the License at http://www.apache.org/licenses/LICENSE-2.0

require 'rbconfig'
require 'zlib'

suffix = case RbConfig::CONFIG['host_os']
         when /linux/
           os = `. /etc/os-release 2> /dev/null && echo ${ID}_${VERSION_ID}`.strip

           os = 'ubuntu_16.04' if os.start_with?('ubuntu_16.') ||
                                  os.start_with?('ubuntu_17.') ||
                                  os.start_with?('linuxmint_18.')

           os = 'ubuntu_18.04' if os.start_with?('ubuntu_18.') ||
                                  os.start_with?('ubuntu_19.') ||
                                  os.start_with?('elementary') ||
                                  os.start_with?('linuxmint_19.') ||
                                  os.start_with?('pop') ||
                                  os.start_with?('zorin')

           os = 'ubuntu_20.04' if os.start_with?('ubuntu_20.') ||
                                  os.start_with?('ubuntu_21.') ||
                                  os.start_with?('linuxmint_20.')

           os = 'ubuntu_22.04' if os.start_with?('ubuntu_22.') ||
                                  os.start_with?('linuxmint_21.')

           os = 'centos_6' if os.empty? && File.read('/etc/centos-release').start_with?('CentOS release 6')

           os = 'centos_7' if os.start_with?('rhel_7.')

           os = 'centos_8' if os.start_with?('rhel_8.')

           os = 'almalinux_8' if os.start_with?('almalinux_8')

           os = 'almalinux_9' if os.start_with?('almalinux_9')

           os = 'rockylinux_8' if os.start_with?('rocky_8')

           os = 'rockylinux_9' if os.start_with?('rocky_9')

           os = 'oraclelinux_8' if os.start_with?('ol_8.')

           os = 'oraclelinux_9' if os.start_with?('ol_9.')

           os = 'amazonlinux_2' if os == 'amzn_2'

           os = 'amazonlinux_2023' if os == 'amzn_2023'

           os_based_on_debian_9 = os.start_with?('debian_9') ||
                                  os.start_with?('deepin')
           os = 'debian_9' if os_based_on_debian_9

           os = 'debian_10' if os.start_with?('debian_10')

           os = 'debian_11' if os.start_with?('debian_11')

           os = 'debian_12' if os.start_with?('debian_12')

           os = 'archlinux' if os.start_with?('arch_') ||
                               os.start_with?('manjaro_')

           architecture = case RbConfig::CONFIG['host_cpu']
                          when *%w[arm64 aarch64 arch64]
                            'arm64'
                          when 'x86_64'
                            'amd64'
                          else
                            'i386'
                          end

           "#{os}_#{architecture}"
         when /darwin/
           'macos_cocoa'
         else
           'unknown'
         end

suffix = ENV['WKHTMLTOPDF_HOST_SUFFIX'] unless ENV['WKHTMLTOPDF_HOST_SUFFIX'].to_s.empty?

binary = "#{__FILE__}_#{suffix}"

if File.exist?("#{binary}.gz") && !File.exist?(binary)
  File.open binary, 'wb', 0o755 do |file|
    Zlib::GzipReader.open("#{binary}.gz") { |gzip| file << gzip.read }
  end
end

unless File.exist? binary
  raise 'Invalid platform, must be running on Ubuntu 16.04/18.04/20.04/22.04, ' \
        'CentOS 6/7/8, Debian 9/10, Archlinux amd64, or Intel-based Cocoa macOS ' \
        "(missing binary: #{binary})."
end

exec *$*.unshift(binary)
